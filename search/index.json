[{"content":"Building My Next.js Application: A Journey So Far Vision for the Application The goal for this application goes beyond just a blog. I\u0026rsquo;m building it to serve multiple purposes, including:\nJournal and Blog: A space to document my journey, my thoughts, and any interesting findings along the way.\nResearch and Brainstorming Hub: A place where I can manage my research, keep track of brainstorming sessions, and store all the insights I gather from different sources.\nConversation Tracking: I\u0026rsquo;m integrating this with my conversations with ChatGPT, turning it into a co-founder or co-worker of sorts. It will be particularly useful for managing tangents and exploring ideas in depth. Imagine branching conversation threads off each other, generating documents to save as artifacts, and having conversations from different contexts—pulling in different documents, information, or conversation history. It’s like a fractal of conversations, almost like Twitter for your brain or a memory palace.\nKnowledge Management Database: I want this app to act as a central repository for everything I learn and explore, making it easier to find information later and build upon existing knowledge.\nContextual Focus: It will help me hone in on specific contexts, offering tools to organize my work and thoughts depending on what I’m focusing on at any given time.\nTask Tracker and Planner: I also plan to add functionality for managing tasks and planning ahead, so it doubles as a personal productivity tool.\nSetting the Foundation I recently embarked on a journey to build a web app using Next.js, and I wanted to share my progress so far. It\u0026rsquo;s been a lot of experimenting, researching, and piecing together different technologies to create a modern, scalable web experience. The number of buzzwords I’ve learned is hilarious. I got the basics up and running almost immediately, but setting up CORS and authentication was a huge time drain. I\u0026rsquo;m glad I have a handle on it now, though (assuming I’m not in the Dunning-Kruger effect 🤞). So here’s the report:\nI started by setting up a Next.js project, incorporating TypeScript right from the start. TypeScript\u0026rsquo;s type safety is invaluable, especially for building robust applications. I also added Tailwind CSS for quick styling, leveraging its utility-first approach to keep my components clean and responsive.\nCore Features NextAuth for Authentication: One of the core aspects of my application is user authentication. I chose NextAuth because of its simplicity and flexibility. So far, I’ve managed to set up both an unprotected landing page and a protected page, ensuring that only authenticated users can access specific content.\nSupabase for the Database: For database integration, I decided to use Supabase. It’s a great alternative to Firebase, offering a straightforward API and built-in PostgreSQL support. I haven’t fully connected it yet, but it\u0026rsquo;s in the pipeline.\nExploring Templates: Challenges and Wins Before settling on the current setup, I explored a few different templates and deployment options:\nHugo Site Deployed with GitHub Pages: I initially tried using a Hugo template for a static site. It deployed well with GitHub Pages, but adapting it to work with Netlify proved difficult, especially getting Netlify Identity to function correctly. Ultimately, it felt too rigid for my needs.\nNext.js Site Deployed with Netlify: My next attempt was a basic Next.js blog deployed with Netlify. While it worked, it was very basic—lacking features like complex navigation, search, and categorization. Plus, I struggled to fully understand how to expand upon the chosen theme.\nStarting Fresh with a Bare-Bones Next.js App: Eventually, I decided to start with a bare-bones Next.js setup and manually integrate everything I needed, including NextAuth for authentication. This approach allowed me to understand each component deeply, and I\u0026rsquo;ll be hosting this version with Vercel for its streamlined deployment process.\nApplication Structure Dynamic Routes: These are key for creating unique pages like individual blog posts. I’ve set up dynamic routes to handle different user pages and content types.\nSSR and SSG: I\u0026rsquo;ve implemented both Server-Side Rendering (SSR) and Static Site Generation (SSG) where needed. SSR is great for personalized content, while SSG helps with performance for static pages.\nReusable Layout Component: I created a layout.tsx file to maintain a consistent layout across pages, ensuring shared elements like navigation and footer remain in one place.\nGlobal Styles and Configs: I’ve set up globals.css for shared styles and configured ESLint to keep my code consistent and clean. The next.config.mjs and package.json files help manage my dependencies and configurations.\nDebugging Adventures: The Three-Period Bug One particularly funny struggle I had was with a bug in my dynamic routing setup. I spent quite a bit of time trying to figure out why the route wasn\u0026rsquo;t working as expected—only to realize that I needed three periods (...) instead of two (..) in the dynamic route definition. It was a simple typo, but it caused quite a headache until I figured it out. Definitely a good reminder to pay attention to those small details!\nSetting Up CORS for Security When deploying my API routes via serverless functions on Vercel, I faced the challenge of properly configuring CORS (Cross-Origin Resource Sharing) to ensure that only trusted domains can make requests.\nHere’s what I did:\nCreated a middleware.ts file to handle CORS for all API routes. This simplified the code in each individual API handler and ensured consistency across the project.\nTesting involved deploying to production and confirming that only authorized domains could access the API without encountering CORS issues. This setup greatly enhances the security of my application by preventing unauthorized domains from making API requests.\nLocal Development Setup Right now, everything is running locally. I’m using VS Code as my main IDE, with Chrome for testing and GitHub Desktop for source control. This workflow allows me to iterate quickly and track changes effectively.\nIssues We\u0026rsquo;re Working Through 1. \u0026ldquo;Too Many Requests\u0026rdquo; Error The HTTP 429 status code suggests that the app has exceeded its rate limit, either due to legitimate use or potentially from malicious requests.\nSolutions: Implement rate limiting on the backend to prevent abuse. Review access logs to identify any unusual activity. Consider using a service like Cloudflare for DDoS protection and network-level rate limiting. 2. Session Storage and Security The nextauth.message object in session storage is part of NextAuth’s internal mechanism. Storing sensitive data client-side could be vulnerable to XSS attacks.\nSolutions: Ensure OAuth tokens are stored in HTTP-only cookies, which are inaccessible via JavaScript, providing enhanced security. Shift session handling entirely server-side for better security, minimizing reliance on client-side storage. 3. Implementing Content Security Policies (CSP) Adding a Content Security Policy (CSP) to mitigate risks like cross-site scripting (XSS). Adding COEP (Cross-Origin Embedder Policy) and COOP (Cross-Origin Opener Policy) headers for better security, especially for embedded resources. Looking Ahead Next up, I plan to fully integrate Supabase, add OAuth providers to the authentication setup, and start focusing on the content aspect of the site—like this blog! Once everything is polished locally, I\u0026rsquo;ll be deploying the application on Vercel.\nI also plan to explore Vercel’s KV database integration for enhanced storage capabilities, as it integrates nicely with Vercel and could be a good fit for managing some of the dynamic content aspects of my application.\nIt’s been exciting to put all these pieces together, and I’m looking forward to seeing where this journey takes me. Stay tuned for more updates as I continue building!\nTechnical Appendix: Folder Structure Overview This section provides a detailed overview of the folder structure for developers interested in understanding the technical layout of the application.\nTop-Level Folders and Files .next: Auto-generated when you build your Next.js project.\ncache: Used by Next.js to optimize repeated builds. server, static, types: Server-side code, static assets, and TypeScript type definitions used by Next.js during execution. node_modules: Dependencies installed via npm or yarn.\nsrc: Main folder where the source code resides.\napp: The Next.js app directory follows the new App Router paradigm. about/page.tsx: Defines the \u0026ldquo;About\u0026rdquo; page. api/auth/[\u0026hellip;nextauth]/route.ts: Sets up the NextAuth API route for authentication. fonts: Contains custom fonts (e.g., GeistMonoVF.woff). favicon.ico: The browser tab icon. globals.css: Global CSS styles for typography, body styles, and shared utilities. layout.tsx: Reusable layout wrapping around every page, including navigation bars and footers. components: Reusable UI pieces, like button.tsx.\nlib, services, styles:\nlib: Utility functions and reusable logic. services: Handles service-level logic like fetching data from APIs. styles: CSS files for styling individual components. Config and Other Files .env.local: Stores environment variables for local development, like API keys. .eslintrc.json: Configuration for ESLint to enforce code style. .gitignore: Specifies files and directories that Git should ignore. next.config.mjs: Main configuration for Next.js, including custom webpack settings. package.json: Metadata about the project, including scripts and dependencies. tailwind.config.js: Configuration for Tailwind CSS. tsconfig.json: TypeScript configuration for compiler options and path aliases. Summary of Rationale Modularization and Reusability: Files like button.tsx are stored in components to ensure UI elements are reusable, promoting clean and maintainable code. Separation of Concerns: Grouping related files (e.g., APIs, components, services) makes navigation easier and keeps the codebase consistent. App Router \u0026amp; Layout: The use of app and layout.tsx leverages Next.js\u0026rsquo;s new App Router feature for cleaner routing and consistent page design. Scalability: Splitting logic into lib and services helps scale without creating tightly coupled, monolithic components. Overall, the folder structure reflects an organized approach balancing flexibility and scalability, making future expansion and maintenance much easier.\n","date":"2024-10-07T00:00:00Z","image":"https://git.noahreardon.blog/p/building-my-first-next-js-site/cover_hu11400762074704566184.jpeg","permalink":"https://git.noahreardon.blog/p/building-my-first-next-js-site/","title":"Building My Next.js Application: A Journey So Far"},{"content":"I’ve been thinking about how we can integrate AI into society in a way that mirrors the way we already structure things. We have individuals, families, communities, and then bigger entities like states and nations. What if AI worked in a similar way? This idea has been bouncing around in my head for a while, and today it really started to take shape.\nAt the individual level, you’d have your own personal AI, running on your own hardware, using your device’s compute power. This AI is like an extension of yourself—your sidekick, totally in sync with your values and personality. But its power is limited to what your personal hardware can handle and the data it gets from just you.\nThen, at the family level, the AI operates on more devices. It has access to more compute power and a larger pool of data, because it’s pulling from everyone in the family. It’s designed to understand the collective goals and values of the group, but it’s also balancing input from each individual. It’s a little less aligned with you specifically, but still closely connected.\nAnd this trend keeps scaling up. Community AI has even more compute power and data, pulling from multiple families and individuals. By the time you reach state or national AI, it’s working with vast amounts of data and compute power, solving problems for a much larger population. Each layer of AI has its own role, balancing alignment between personal values and the collective good, with higher levels handling broader, more intricate challenges.\nAt the societal level, AI would have the most resources—more data, more compute power—and work to address collective challenges. It’s not about replacing human governance or leadership, but rather augmenting it. AI at this level would assist in navigating complex societal issues by analyzing vast amounts of data and offering insights that align both individual and collective interests. Human leaders would still be central, but AI would provide a layer of intelligence and problem-solving that could scale far beyond what humans can manage on their own.\nNow, let’s fold in another idea I’ve been thinking about: a data economy. In the way we work today, you’re typically hired to perform a task—let’s say writing code—and your value is based on getting that task done. You’ve got a manager supervising the work, assigning features or tasks, and you focus on delivering them. But what often gets overlooked in that structure is the meta layer—the process of improving your craft, finding better ways to automate, or pushing quality higher. That kind of personal growth is assumed to happen over time as you advance in your career, but it’s not usually the focus.\nIn the data economy, it shifts. Instead of being hired just to write code, the AI might handle most of that output, and your role would be to guide the AI—help it improve, get better at the task, and find more efficient solutions. Your value isn’t about doing the task directly anymore; it’s about your expertise, your creativity, and your ability to teach and refine the AI in a specific field. Your approach to problems becomes something that you can own, something that’s inherently valuable. This puts more emphasis on honing your craft and developing domain-specific knowledge, where you’re more focused on creativity and problem-solving than just checking off tasks.\nThe AI frees people up from the repetitive, tedious parts of jobs and pushes most careers toward the creative frontier. It’s about shifting the majority of jobs toward work that requires passion, expertise, and innovation. That said, I think there’s still room for menial tasks that some people actually prefer, but the focus moves toward elevating creativity and skill in the workforce.\nObviously, there are going to be concerns. Some people don’t want to constantly innovate or think critically—they prefer stability. And that’s a big one. There are people who just want to show up, do the job, and go home without worrying about whether they’re the next big innovator. I get that. Some people value routine, stability, and predictability over creativity and exploration. But in this new structure, those repetitive tasks are the very ones we’ll try to automate first. The goal isn’t to make people obsolete but to free up time for higher-level work that only humans, with our creativity and adaptability, can provide.\nThere’s this balancing act between the need for alignment and the hunger for unique data. Society wants us all to be on the same page, but AI, especially at the higher levels, wants as much diverse data as it can get. It needs those outlier ideas to keep improving. It’s kind of like how governments work now—we need order, but we also need innovation. The tension between these forces can actually be a good thing.\nAnd on a related, slightly funny note, think about how personalized AI could even start affecting something like schoolwork. Imagine students using AI to help write their homework or essays. Teachers grading these AI-assisted papers might give feedback like, “This sounds way too artificial, like it was written by an AI,” and give it a bad grade. The student could then take that feedback, tell their AI it needs to sound less robotic, and then boom—next time, the AI’s output is more aligned with the student’s voice, more unique, and gets a higher grade. It’s kind of wild to think how AI will adapt to even small critiques like that, improving over time based on the person’s data and style. The AI will get better at mimicking the student’s voice, making the collaboration between the human and AI even stronger.\nThis is where I think the future is heading. We won’t value people just for their labor anymore. We’ll value them for the way they think, the data they provide, and how they help AI solve problems in new, creative ways. It’s a shift in how we think about work, value, and society.\nAnyway, that’s what’s been bouncing around in my head today. I’m still fleshing it out, but I think there’s something to this idea of structuring AI in a way that mirrors how we already structure society. It’s about solving alignment issues between humans and AI, and finding a way to value human creativity and problem-solving at a deeper level.\n","date":"2024-10-05T00:00:00Z","image":"https://git.noahreardon.blog/p/structuring-society-with-ai/ai-society_hu18059535395246716658.jpeg","permalink":"https://git.noahreardon.blog/p/structuring-society-with-ai/","title":"Structuring Society with AI: An Idea That’s Been Bouncing Around My Head"},{"content":"My Hugo Blog Post This is some content in Markdown.\nHere is more content below the script.\nAI Exploration: A Journey Through Tools, Ideas, and the Future 1. Introduction to My AI Exploration My AI journey began with two pivotal moments: when my mom shared an article about GPT-01 and when my dad introduced me to a Lex Friedman interview with Peter Levels, where the solo indie developer journey was discussed. These moments merged my love for problem-solving with my curiosity about how AI could mimic, and even augment, human cognition.\nWith my background in mechanical engineering and software development, I’ve always been drawn to systems thinking. AI seemed like a natural extension of this—allowing me to explore not just how things work but how they could think, adapt, and evolve over time.\n2. AI News and Updates The AI landscape moves fast, and I’m continually exploring new tools, models, and ideas that emerge. From GPT-3 to GPT-4 and now Custom GPTs, I’m watching how these developments shape business, creativity, and problem-solving.\nKey AI Milestones and Tools Custom GPTs: The introduction of Custom GPTs allows for more specific, task-focused AI interactions. These models provide a middle ground between prompt engineering and training new models, opening up endless possibilities for personalized app development, like Chef Sue and Co-Founder GPT. Integration in Everyday Tools: AI has been seamlessly integrated into everyday tools like Notion, Canva, Flow, and Spark, allowing me to optimize tasks, streamline project management, and even automate email sorting and responses. Staying Informed Keeping track of the latest developments is crucial. I rely on a range of tools and communities for staying in the loop:\nNewsletters: I regularly read The Bootstrapped Founder, Indie Hackers Newsletter, SaaS Weekly, and Levels.io for updates in AI and indie development. Podcasts: Indie Hackers Podcast, The SaaS Podcast, and Build Your SaaS Podcast are excellent resources for learning from others on similar entrepreneurial paths. Communities: Platforms like Indie Hackers, Product Hunt, and Hacker News keep me connected with others working on indie projects and AI applications. 3. Experimenting with AI Apps and Tools Experimentation has been a key part of my AI journey, allowing me to see firsthand how AI can enhance productivity, creativity, and decision-making. Here\u0026rsquo;s a breakdown of the tools in my ecosystem that I’ve worked with:\nProductivity Reminders – Task management and scheduling. Otter – For voice note-taking and transcription, used in brainstorming sessions. Google Sheets \u0026amp; Docs – Core for spreadsheet management and document writing. Google Drive – Central file storage and sharing across projects. Notion – My go-to for project management, task tracking, and knowledge storage. Flow – Productivity and project tracking, especially useful for collaborating across tasks. Agenda – Date-focused note-taking and task organizing. Spark – Efficient email management with prioritization and automation. These tools streamline my workflows, allowing me to focus on higher-level creative work and strategic planning.\nAI Builders Marbleism – For conceptual ideation and brainstorming new ideas. Glitch.com – A platform for building and collaborating on web apps. Looka – AI-generated logos and branding design. Zapier – Automating workflows between apps, ensuring smooth operation across platforms. Art Tools Picsart – For editing and refining visuals, helping me generate images tailored to specific design needs. DaVinci, Artist.ai, and Openart.ai – AI-driven platforms for creating digital artwork. Procreate – A more hands-on creative tool for drawing and illustration. SketchAI – For sketching concepts quickly using AI suggestions. These apps assist in both professional design work and creative exploration. Whether I’m refining a design or brainstorming new visuals, tools like WONDER and Procreate help me generate fresh ideas and see them through to completion.\nGraph Visualization \u0026amp; Research Mermaid Charts – For generating flowcharts and visual representations of workflows or systems. ObservableHQ – A platform for building interactive data visualizations. Figma – Collaborative wireframing and UI/UX design, great for complex system visualizations. Freeform – A flexible tool for brainstorming and sketching ideas, especially useful in early-stage visual planning. Miro – A collaborative whiteboarding tool for visualizing complex projects and workflows. Research \u0026amp; Scouting Product Hunt, TechCrunch, Indie Hackers, and Hacker News – Platforms for staying informed about new products and tech trends, often sparking ideas for new features or products. Perplexity – For answering technical questions and supporting research with concise, focused responses. Nomad List – A platform for discovering remote work opportunities and connecting with digital nomads. TradingView – Used for tracking market trends, stocks, and financial data. Financial \u0026amp; Management RocketMoney – For tracking personal finances, especially useful for managing subscription-based services and budgeting. 1Password – Secure password management across tools and platforms. Entertainment Character AI – Primarily used as an entertainment platform for AI-driven conversations with various personas, adding a creative and experimental element to my toolset. 4. Capabilities of AI, Misconceptions, and Practical Uses Through my exploration, I’ve discovered some significant AI capabilities while also addressing common misconceptions:\nCapabilities of AI Language Understanding \u0026amp; Generation: AI\u0026rsquo;s ability to process natural language has become fundamental to tools like ChatGPT and Claude, which I use for brainstorming and ideation. These tools allow me to express thoughts fluidly, without worrying about phrasing or perfect sentence structures. Visual Creativity: Tools like Picsart and DaVinci streamline the design process, offering creative suggestions and automated workflows. Memory \u0026amp; Knowledge Management: AI-powered platforms like Notion and Zapier allow me to manage vast amounts of data and automate repetitive tasks. This boosts my efficiency and reduces cognitive load, enabling me to focus on more strategic and creative tasks. Common Misconceptions AI Will Replace Jobs: A common misconception is that AI will replace human labor. I view AI as a tool for enhancing human creativity and productivity, not replacing it. For example, Chef Sue leverages AI to assist in meal planning but doesn’t replace the human element of culinary creativity. AI Is Autonomous: Another misconception is that AI operates autonomously. In reality, AI requires human guidance, oversight, and critical thinking to be truly effective. My projects like Co-Founder GPT and Blueprint to the Mind rely on a combination of human direction and AI augmentation. Practical Uses of AI Chef Sue: AI powers meal recommendations, grocery list generation, and meal planning in my kitchen assistant app. It allows users to make smarter decisions about their meals based on preferences, schedules, and dietary needs. Memory Augmentation: In Blueprint to the Mind, I’m working to extend human memory through AI, allowing for enhanced cognitive retrieval and thought organization. The goal is to have a searchable and dynamic system for life management, with AI acting as a second brain. 5. The Role of ChatGPT in Shaping My Thought Process and Research ChatGPT has had a particularly transformative impact on how I approach research, brainstorming, and writing. It\u0026rsquo;s more than just a tool; it has become an extension of my thinking process, allowing me to dive deep into ideas and tangents without being bogged down by the usual roadblocks like writer\u0026rsquo;s block or phrasing issues. Here are some specific ways it has shaped my workflow:\nExploring Tangents and Unconventional Ideas One of ChatGPT’s greatest strengths is its ability to follow my train of thought—no matter how tangential or abstract. When I\u0026rsquo;m brainstorming, I often jump between concepts, ideas, and projects, and ChatGPT helps me explore these threads without losing momentum.\nFluid Ideation: ChatGPT enables me to rapidly explore various offshoots of a single idea. Whether I\u0026rsquo;m considering a new feature for Chef Sue or brainstorming how to improve Blueprint to the Mind, ChatGPT lets me map out potential directions quickly. Deep Dives into Research: When researching complex topics, like RAG systems or the evolution of AI models, ChatGPT helps synthesize information and guide my next steps, allowing me to avoid getting lost in irrelevant details. I can ask clarifying questions and refine my understanding of complex subjects on the fly. Managing Attention and Focus AI has also helped me better manage my attention, particularly when juggling multiple projects and ideas simultaneously. Instead of worrying about capturing every thought perfectly, I let ChatGPT handle the heavy lifting of phrasing and idea refinement.\nFreeing Cognitive Load: By allowing ChatGPT to handle sentence structuring and basic research, I can focus my cognitive energy on higher-order thinking—connecting ideas, seeing patterns, and deciding on the next steps for my projects. Reducing Friction in Writing: Writer’s block has always been an obstacle, especially when trying to communicate complex ideas or maintain momentum in a long piece of writing. With ChatGPT, I can get past that initial hurdle. I can communicate my thoughts in a rough form, and ChatGPT refines them into something cohesive and well-phrased. Breaking Through Writer’s Block ChatGPT has fundamentally altered the way I approach written communication. Where I once struggled with writer’s block—whether from not knowing how to start or from overthinking how to phrase things—ChatGPT has removed those obstacles entirely.\nSpeeding Up Content Creation: Whether I’m drafting newsletters, blogs, or technical documentation, ChatGPT speeds up the process. Instead of agonizing over word choice or structure, I can rely on ChatGPT to offer a polished draft that I can easily refine further. Expressing Ideas More Freely: I no longer worry about perfect phrasing or grammar in my initial drafts. ChatGPT allows me to focus on the core message and then helps me turn it into something structured and coherent. Shaping My Thinking and Communication Brainstorming Partner: In many ways, ChatGPT acts as a brainstorming partner—suggesting new angles, asking clarifying questions, and helping me articulate complex ideas more clearly. This iterative process has shaped the way I approach problem-solving and creative ideation. Reflecting and Structuring Ideas: ChatGPT excels at reflecting back my own ideas, often reframing them in ways I hadn’t initially considered. This helps me clarify my thoughts and see the broader context of what I’m working on. 6. My AI Projects and App Ideas Chef Sue Chef Sue leverages AI to make meal planning and grocery shopping more efficient and personalized.\nPersonalized Recipe Suggestions: Chef Sue uses a Retrieval-Augmented Generation (RAG) system to pull recipe data from both user preferences and third-party APIs. Automated Grocery Lists: AI generates grocery lists based on selected recipes, optimizing for user preferences and dietary needs. Meal Planning: The app offers meal plans tailored to the user’s schedule, preferences, and budget, making the process of planning meals easier and more efficient. Blueprint to the Mind This project is my vision of a memory augmentation tool that helps organize and retrieve thoughts, ideas, and experiences.\nPersona Modeling: The system would model a user’s behavior, offering context-specific reminders and insights based on past interactions. Evolving Memory Storage: The AI would act as an extension of human memory, continuously capturing experiences and making them searchable and retrievable on demand. Co-Founder GPT I’m developing a Custom GPT that acts as a co-founder, assisting with project management, brainstorming, and decision-making.\nTask Management and Memory Recall: This AI assistant will store project milestones and ideas, offering insights during brainstorming sessions and helping manage multiple projects. Incorporating these tools into my daily work has helped me navigate the challenges of indie development and research, allowing me to stay focused, organized, and always exploring new ideas. Whether it\u0026rsquo;s managing the finer details of my projects, brainstorming new concepts, or overcoming writing obstacles, AI has become an integral part of my creative and professional process.\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2024-10-04T00:00:00Z","image":"https://git.noahreardon.blog/p/ai-exploration-journey/cover_hu7620540717117597442.jpeg","permalink":"https://git.noahreardon.blog/p/ai-exploration-journey/","title":"AI Exploration: A Journey Through Tools, Ideas, and the Future"},{"content":"Deception Ladder: Navigating AI and Human Strategy in a Game of Influence In a world increasingly driven by AI, the lines between human and machine grow ever thinner. Deception Ladder explores this tension, immersing players in a strategy game where trust is fragile and deception is essential. The goal isn’t just to survive—it’s to rise. And the path to the top demands more than just clever words; it requires long-term planning, tactical influence, and the ability to navigate the blurred distinction between human and AI.\nThe Ladder: Climbing Without Knowing Who’s Real At the heart of the game is the Ladder, a ranking system that determines your progress based on your ability to deceive or outwit others. The twist? You never know if you\u0026rsquo;re up against a human or an AI. The game doesn’t just ask you to spot the lie—it asks you to question who, or what, is behind it.\nThe uncertainty is the game\u0026rsquo;s engine. It drives every conversation, every vote, every alliance. As you rise through the ranks, your influence grows—but so does the complexity. Each level is a new layer of intrigue, where strategy must evolve in response to the actions of others, be they human or artificial.\nA Game of Maneuvering and Influence In Deception Ladder, it\u0026rsquo;s not enough to simply survive the round. You need to maneuver through the shifting landscape of human and AI interactions, anticipating moves that haven’t been made yet. Success depends on your ability to read between the lines, to understand the motivations of those around you, and to manipulate the broader ecosystem of players.\nAs you rise, the game shifts from a simple social deception contest into something far more intricate. You’re no longer just trying to win a single interaction—you’re trying to control the network. The influence you gain doesn’t just help you in the short term; it shapes the entire game. You become an entity in the system, a force that others must reckon with.\nCustom AI and the Evolution of Strategy One of the more intriguing aspects of Deception Ladder is the ability to deploy custom AI agents as you advance. These aren\u0026rsquo;t generic bots—they are strategic tools that you design, programmed with specific behaviors to manipulate the game in your favor. Whether it\u0026rsquo;s an AI that plays innocent to sway a vote or an AI assassin designed to blend into the crowd, these agents expand your capacity for influence.\nAs your rank grows, so does your ability to craft increasingly complex AI strategies. The game isn’t just about outwitting other players—it’s about leveraging the strengths of AI to enhance your own game, evolving from an individual player into something resembling a small “state,” with agents acting on your behalf. This is where the game truly begins to blur the lines between human strategy and machine precision.\nThe Broader Implications: Society, Systems, and Trust From a broader perspective, Deception Ladder speaks to something more than just gameplay. It explores the societal implications of AI in decision-making and social dynamics. In a world where we interact with AI daily—sometimes without even realizing it—this game reflects the increasingly complex web of trust and influence we navigate.\nThe game’s ranking system is a reflection of how trust works in systems where the participants aren\u0026rsquo;t always who they seem to be. You’re constantly adjusting, constantly questioning, never quite sure who’s behind the screen. And in many ways, isn’t that where society is heading? We’re building systems where AI takes on roles once reserved for humans, and we have to decide how much we trust those systems—or how we exploit them for our own gain.\nDeception Ladder asks the player to engage with these ideas directly. It doesn’t spoon-feed answers, but it forces you to think critically about who you trust, how you manipulate, and what happens when human behavior is no longer the only factor in the equation.\nWhere It All Leads At the end of the day, Deception Ladder is about more than just climbing to the top. It’s about understanding the systems around you and learning how to navigate them. Whether you\u0026rsquo;re manipulating AI or deceiving fellow humans, the ultimate goal is to rise—and in doing so, you gain insight into both the game and the real world it reflects.\nThis isn’t just about strategy; it’s about influence. It\u0026rsquo;s about shaping the game world to your advantage, learning to read people—and machines—and understanding that the two are often closer than we think.\nSo, the question remains: Can you climb the Deception Ladder, or will it collapse beneath you?\n","date":"2024-10-04T00:00:00Z","image":"https://git.noahreardon.blog/p/deception-ladder/deception-ladder-cover_hu1541738555092706030.png","permalink":"https://git.noahreardon.blog/p/deception-ladder/","title":"Deception Ladder: Navigating AI and Human Strategy in a Game of Influence"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://git.noahreardon.blog/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://git.noahreardon.blog/p/image-gallery/2_hu15576070775610481867.jpg","permalink":"https://git.noahreardon.blog/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://git.noahreardon.blog/p/shortcodes/cover_hu17063188895770243625.jpg","permalink":"https://git.noahreardon.blog/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://git.noahreardon.blog/p/math-typesetting/","title":"Math Typesetting"}]